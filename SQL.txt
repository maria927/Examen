--DDL

CREATE TABLE SALARIES(
ID NUMBER(*,0) primary key,
EMPLOYEE_ID NUMBER(*,0) NOT NULL,
PROJECT_ID NUMBER(*,0),
SALARY NUMBER(10,2) NOT NULL
);

CREATE TABLE EMPLOYEES(
ID NUMBER(*,0) primary key,
MANAGER_ID NUMBER(*,0),
DATE_OF_JOINING DATE NOT NULL,
FULL_NAME VARCHAR2(255 BYTE) NOT NULL
);

CREATE TABLE PROJECTS(
ID NUMBER(*,0) primary key,
CODE VARCHAR2(255 BYTE) NOT NULL,
MANAGER_ID NUMBER(*,0),
BUDGET NUMBER(10,2) NOT NULL,
DATE_OF_BEGINNING DATE,
DATE_OF_ENDING DATE
);

ALTER TABLE SALARIES
ADD CONSTRAINT FK_SALARY_EMPLOYEE
FOREIGN KEY (EMPLOYEE_ID)
REFERENCES EMPLOYEES(id);

ALTER TABLE SALARIES
ADD CONSTRAINT FK_SALARY_PROJECT
FOREIGN KEY (PROJECT_ID)
REFERENCES PROJECTS(ID);

ALTER TABLE PROJECTS
ADD CONSTRAINT FK_MANAGER_PROJECT
FOREIGN KEY (MANAGER_ID)
REFERENCES EMPLOYEES(ID);

ALTER TABLE EMPLOYEES
ADD CONSTRAINT FK_MANAGER
FOREIGN KEY (MANAGER_ID)
REFERENCES EMPLOYEES(ID);

ALTER TABLE SALARIES
    ADD CONSTRAINT CK_greater CHECK (SALARY>1000);
    
--QUERIES

--Write a SQL query to count the number of employees working in project '48205501099'



SELECT em.FULL_NAME FROM SALARIES sa 
INNER JOIN EMPLOYEES em ON em.ID=sa.EMPLOYEE_ID
INNER JOIN PROJECTS pr ON pr.ID=sa.PROJECT_ID
WHERE pr.CODE='48205501099';


--Write a SQL query to fetch employee names (one column, don't change the alias)
--having salary greater than or equal to 2500 and less than or equal 3000.

SELECT em.FULL_NAME FROM SALARIES sa
INNER JOIN EMPLOYEES em ON em.ID=sa.EMPLOYEE_ID
WHERE sa.SALARY>=2500 AND sa.SALARY<=3000;
